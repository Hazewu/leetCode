1、调试是执行一次成功的测试之后所要进行的工作；
  包含两个步骤，从执行了一个成功的测试用例、发现了一个问题之后开始；
  1、确定程序中可疑错误的准确性质和位置；
  2、修改错误；

2、调试似乎是软件开发过程中最不受程序员欢迎的部分之一，主要原因可能包括：
  1、个人自尊会从中阻挠；
  2、热情耗尽；
  3、可能会迷失方向；
  4、必须自力更生；

3、暴力法调试，可至少被划分为三种类型：
  1、利用内存信息输出来调试；
  2、根据一般的“在程序中插入打印语句”建议来调试；
  3、使用自动化的调试工具进行调试；
  主要问题是，这些暴力调试方法都忽略了思考的过程；并没有仔细分析原因；
  建议仅在下列情况下使用暴力调试方法：
  1、其他的方法都失败了；
  2、作为思考过程的补充，而不是替代方法；

4、归纳法调试，是一种特殊的思考过程，可以从细节转到全局，步骤如下：
  1、确定相关数据；
  2、组织数据；观察线索间的模式；
  3、作出假设；
  4、证明假设；

5、演绎法调试，从一些普遍的理论或前提出发，使用排除和精炼的过程，达到一个结论（错误的位置）；
  1、列举出所有可能的原因或假设。简历一份所有想象得到的错误线索的清单，线索不需要有完整的解释；
  2、利用数据排除可能的原因；
  3、提炼剩下的假设；
  4、证明剩下的假设；

6、回溯法调试，沿着程序的逻辑结构回溯不正确的结果，直到找出程序逻辑出错的位置；

7、测试法调试，用测试用例去定位错误；

8、调试的原则，两类；
  1、定位错误的原则：
    A、动脑筋，对错误症状的有关信息进行分析；一个高效的程序调试人员应该不使用计算机就能定位大多数的错误；
    B、如果遇到了僵局，就留到稍后解决；灵感会突然出来；
    C、如果遇到了困境，就把问题描述给其他人听；与其他人交谈可能会帮助发现新东西；
    D、仅将测试工具作为第二种手段；只是偶然的调试方法；
    E、避免使用试验法——仅将其作为最后的手段！
  2、修改错误的技术：
    A、存在一个缺陷的地方，很有可能还存在其他缺陷；
    B、应该纠正错误本身，而不仅是其症状；
    C、正确纠正错误的可能性并非100%；
    D、正确修改错误的可能性随着程序规模的增加而降低；
    E、应意识改正错误会引起新错误的可能性；
    F、修改错误的过程也是临时回到设计阶段的过程；
    G、应修改源代码，而不是目标代码；

9、错误分析；从详细分析发现的错误，或至少一部分错误的过程中获得提高；
  详细的错误分析会包括：
  1、错误出现在什么地方？需要通过对程序文档和项目历史进行回溯研究；
  2、谁制造了这个错误？
  3、哪些做得不正确？
  4、如何避免该错误的出现？
  5、为什么没有早些发现？
  6、该如何更早地发现错误？如何改进评审和测试过程以便更早地发现同类型的错误；
  分析过程是艰难的，但是是有价值的；