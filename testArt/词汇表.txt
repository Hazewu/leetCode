1、black-box testing（黑盒测试），将程序视为一个整体、且忽略其内部结构的测试方法；单纯从软件的规格说明中获取测试数据；
2、bottom-up testing（自底向上的测试），增量模块测试的一种形式，首先测试底层模块，再测试调用模块等等；
3、boundary-value analysis（边界值分析），一种黑盒测试方法，重点在于程序输入区间的边界区域；
4、branch coverage（分支覆盖），同“判定覆盖”；
5、cause-effect graphing（因果图分析），使用简化的数字逻辑电路图（组合逻辑网络）辅助生成一组高效测试用例的技术；
6、code inspection（代码检查），一套供小组代码阅读的规程和错误检查技术，作为检查错误的测试周期的一部分，通常使用一份常见错误列表来对照代码；
7、condition coverage（条件覆盖），白盒测试的一项准则，要求编写足够数量的测试用例，确保将一个判断中的每个条件的所有可能的结果至少执行一次；
8、data-driving testing（数据驱动测试），同“黑盒测试”；
9、decision/condition coverage（判定/条件覆盖），白盒测试的一项准则，要求编写足够数量的测试用例，确保将一个判断中的每个条件的所有可能的结果至少执行一次，将每个判断的所有可能的结果至少执行一次，将每个入口点都至少执行一次；
10、decision coverage（判定覆盖），白盒测试的一项准则，要求编写足够数量的测试用例，确保每一个判断都至少有一个为真和为假的输出结果；
11、desk checking（桌面检查），一种将代码审查和走查技术结合起来，再用户桌面上执行程序的技术；
12、equivalent partition（等价类划分），一种黑盒测试技术，其中每个测试用例都必须体现尽可能多的不同的输入情况，以最大限度地减少全部用例的数量，应该尽量将程序输入范围划分为等价类，这样类中某个输入数据的测试结果等同于同类中所有输入数据的测试结果；
13、exhaustive input testing（穷举输入测试），黑盒测试的一项准则，通过将每个可能的输入条件都作为测试用例，尽量发现程序中的所有错误；
14、external specification（外部规格说明），从某个相关系统部件用户的角度对程序功能的精确描述；
15、facility testing（能力测试），系统测试的一种类型，判断目标文档提及的每一项能力（或功能）是否都实现了。不要混淆能力测试与功能测试；
16、function testing（功能测试），发现程序与其外部规格说明之间存在不一致的过程；
17、incremental testing（增量测试），模块测试的一种形式，将待测模块与已测模块组装在一起进行测试；
18、input/output testing（输入/输出测试），同“黑盒测试”；
19、JVM：Java virtual machine（Java虚拟机）的缩写；
20、LDAP：lightweight directory application protocol（轻量目录应用协议）的缩写；
21、logic-driven testing（逻辑驱动测试），同“白盒测试”；
22、multiple-condition coverage（多重条件覆盖），白盒测试的一项准则，要求编写足够数量的测试用例，确保每个判定中的所有可能的条件结果的组合，以及所有的入口点都至少执行一次；
23、nonincremental testing（非增量测试），模块测试的一种形式，每个模块单独进行测试；
24、performance testing（性能测试），系统测试的一种形式，尽量证明程序不能满足特定的指标，如在特定负载和配置环境下的响应时间和吞吐率；
25、random-input testing（随机输入测试），在所有可能的输入值中随机选取一个子集来对程序进行测试的过程；
26、security testing（安全性测试），系统测试的一种形式，用于考验程序或系统的安全保密机制；
27、stress testing（强度测试），系统测试的一种形式，使程序经受高负载或强度；高强度是指在很短的时间间隔内达到的数据或操作的数量峰值；因特网应用系统通常需要进行强度测试，因为会有大量用户并发访问系统；
28、system testing（系统测试），高级测试的一种形式，将系统或程序与其初始目标进行比较，为了完成系统测试，需要一套书面的可度量的目标；
29、testing（测试），为了发现错误而执行程序的过程；
30、top-down testing（自顶向下的测试），增量模块测试的一种形式，首先测试初始模块，再测试下一个子模块等等；
31、usability testing（易用性测试），系统测试的一种形式，测试程序的人机界面；通常要检查的部件包括界面布局、界面色彩、输出格式、输入字段、程序流程、拼写等等；
32、volume testing（容量测试），系统测试的一种形式，使用大容量的数据检验程序能否处理目标文档中规定数据容量；容量测试与强度测试并不相同；
33、walkthrough（走查），一套供小组代码阅读的规程和错误检查技术，作为检查错误的测试周期的一部分；通常一个小组的人起到“计算机”的作用，执行一个小的测试用例集；
34、white-box testing（白盒测试），一种检查程序内部结构的测试类型；