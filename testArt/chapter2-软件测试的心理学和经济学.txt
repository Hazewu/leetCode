1、测试是为发现错误而执行程序的过程；
  如果我们的目标在于证明程序中存在错误，我们设计的测试数据就有可能更多地发现问题；

2、软件测试是一个破坏性的过程；
  软件测试更适宜被视为试图发现程序中错误的破坏性的过程；一个成功的测试用例，通过诱发程序发生错误，可以在这个方向上促使软件质量的改进；

3、程序没有实现预期功能时，错误；
  程序做了其不应该做的，也是错误；

4、软件测试不可能发现所有的错误；

5、黑盒测试，又称为数据驱动的测试或输入/输出驱动的测试；
  测试目标与程序的内部机制和结构完全无关；而是将重点集中放在发现程序不按照其规范运行的环境条件；
  穷举输入测试；

6、白盒测试，又称为逻辑驱动测试；
  允许检查程序的内部结构；
  穷举路径测试；


7、软件测试的重要原则：
  1、测试用例中一个必需部分是对预期输出或结果进行定义；
  2、程序员应当避免测试自己编写的程序；
  3、编写软件的组织不应当测试自己编写的软件；
  4、应当彻底检查每个测试的执行结果；
  5、测试用例的编写不仅应当根据有效和预料到的输入情况，而且也应当根据无效和未预料到的输入情况；
  6、检查程序是否“未做其应该做的”仅是测试的一半，测试的另一半是检查程序是否“做了不应该做的”；
  7、应避免测试用例用后即弃，除非软件本身就是一个一次性的软件；
  8、计划测试工作时不应默许假定不会发现错误；
  9、程序某部分存在更多的可能性，与该部分已发现错误的数量成正比；
  10、软件测试是一项极富创造性、极具智力挑战性的工作；

8、一个好的测试用具有较高的发现某个尚未发现的错误的可能性；
  一个成功的测试用例能够发现某个尚未发现的错误；