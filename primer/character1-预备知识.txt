
1、C++融合了3种不同的编程方式：
  C语言代表的过程性语言；
  C++在C语言基础上添加的类代表的面向对象语言；
  C++模板支持的泛型编程；

2、编译器是一种特殊的程序，将高级语言翻译成特定计算机的内部语言，这样就可以通过对每个平台使用不同的编译器来在不同的平台上使用同一个高级语言程序了；

3、高级语言致力于解决问题，而不针对特定的硬件；

4、一般来说，计算机语言要处理两个概念——数据和算法；
  数据是程序使用和处理的信息；
  算法是程序使用的方法；

5、过程性语言，强调的是编程的算法方面；
  结构化编程；
  自顶向下（top-down），将大型程序分解成小型、便于管理的任务；反映了过程性编程的思想；

6、OOP面向对象，强调的是数据；
  理念是设计与问题的本质特性相对应的数据格式；
  C++中，类是一种规范，对象是根据这种规范构造的特定数据结构；
  OOP程序设计方法首先设计类，它们准确地表示了程序要处理的东西；
  从低级组织（如类）到高级组织（如程序）的处理过程叫做自下向上（bottom-up）的编程；

7、OOP编程并不仅仅是将数据和方法合并为类定义，还有助于创建可重用的代码；
  多态，能够为运算符和函数创建多个定义，通过编程上下文来确定使用哪个定义；
  继承，能够使用旧类派生出的新类；
  封装，信息隐藏可以保护数据，使其免遭不适当的访问；
  OOP将重点放在表示概念上；

8、设计有用、可靠的类是一项艰巨的任务；

9、泛型编程，强调的是独立于特定数据类型，不依赖特定数据类型来编程；

10、在C++中
  OOP提供了高级抽象；
  C提供了低级硬件访问；

11、如果在不修改代码的情况下，重新编译程序后，程序将运行良好，则该程序是可移植的；

12、运行C++的步骤：
  1、编写源代码；用文本编辑；
  2、编译源代码；通过编译器，生成目标代码，机器语言；
  3、将目标代码与其他代码链接起来（结合启动代码和库代码）；，通过链接程序，生成可执行代码；

13、IDE通常提供了多个菜单项；
  Compile编译；对当前打开的文件中的代码进行编译；
  Build建立；编译项目中所有源代码文件的代码；第一次编译后，第二次只重新编译有修改的文件；
  Make生成；同build；
  BuildAll全部建立；重新编译所有的源代码文件；
  Link链接；将编译后的源代码与所需的库代码组合起来；
  Execute执行；运行程序；
  Run运行；同上；
  Debug调式；以步进方式执行程序；
