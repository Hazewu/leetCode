1、函数定义：函数头+函数体；
  函数头，包括函数返回值类型，函数名，参数列表；
  函数体，指出函数应做什么的计算机指令；
  每条完整的指令都称为命令，所有语句都以分号结束；
  返回语句return用于结束函数；


2、如果程序要使用C++输入或输出工具，需要提供两行代码：
  #include<iostream>
  using namespace std;

3、预处理器，处理名称以#开头的编译指令；
  将引用的文件的内容添加到程序中；编译的下一阶段将使用该文件；

4、命名空间；
  对于iostream，如果只是用cout、cin、endl，可以只引入这三个；
  using std::cout;
  using std::cin;
  using std::endl;

5、C++源代码风格：
  1、每条语句占一行；
  2、每个函数都有一个开始花括号和一个结束花括号，这两个花括号各占一行；开始花括号，可能与函数头在同一行；
  3、函数中的语句都相对于花括号进行缩进；
  4、与函数名称相关的圆括号周围没有空白；

6、新语句：
  1、声明语句创建变量；需要的内存以及该内存单元的名称；声明不一定是定义
  为什么要声明变量？因为有拼写错误的可能；
  声明变量，尽量可能在首次使用变量前声明它；
  2、赋值语句给该变量赋值；将值赋值给存储单元；

7、类定义描述的是数据格式及其用法；类描述了一种数据类型的全部属性（包括可使用它执行的操作）；
  对象则是根据数据格式规范创建的实体；对象是根据这些描述创建的实体；

8、有返回值的函数；参数是发送给函数的信息，返回值是从函数发送回去的值；
  函数原型，之于函数就像变量声明之于变量，指出了返回值类型，参数列表，结尾有一个分号；
  函数原型，应该放在main函数之前；
  函数的源代码，可以放在main函数后面；
  main函数是由操作系统调用的，其返回值返回给操作系统，返回0表示程序运行成功；

9、在Linux中，编译时，可能需要：g++ sqrt.cpp -lm，让编译器在库函数中搜索要使用的函数；

10、让程序能够访问名称空间std的方法有：
  1、将using namespace std；放在函数定义之前，让文件中所有的函数都能够使用名称空间std中所有的元素；
  2、将using namespace std；放在特定的函数定义中，让该函数能够使用名称空间std中的所有元素；
  3、在特定的函数中使用类似using std::cout；这样的编译指令，让该函数能够使用指定的元素，如cout；
  4、完全不使用编译指令using，在需要使用名称空间std中的元素时，使用前缀“std::”；
  